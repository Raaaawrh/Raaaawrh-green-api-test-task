name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths: 
      - public/**
      - src/**
      - .env
      - package-lock.json
      - package.json
      - Dockerfile

  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]
        
    steps:
    - 
      name: Checkout repository
      uses: actions/checkout@v4
    - 
      name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: |
        npm ci
        npm run build --if-present
        npm test
    - 
      name: Tar artifacts
      if: ${{ matrix.node-version == '22.x' }}
      run: tar -cvf artifacts.tar build/ node_modules/
    
    - 
      name: Upload build artifacts
      if: ${{ matrix.node-version == '22.x' }}
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          artifacts.tar

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v4
      -
        name: Build Docker
        run: docker build -t green-api-test-task .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v4
      - 
        name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts.tar
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: .

      -
        name: Untar atrifacts
        run: tar -xvf artifacts.tar

      - 
        name: Deploy with gh-pages
        run: |
            git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
            npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
